{"version":3,"file":"static/js/413.dce6b104.chunk.js","mappings":"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","sources":["components/ScreensPage/ScreensPage.styled.js","components/ScreensPage/Filter/Filter.styled.js","components/ScreensPage/Filter/Filter.js","components/ScreensPage/HeaderDashboard/HeaderDashboard.styled.js","components/ScreensPage/HeaderDashboard/HeaderDashboard.js","components/Boards/AddButton/AddButton.styled.js","components/Boards/AddButton/AddButton.js","components/Boards/ColumnTask/ColumnTask.Styled.js","components/Boards/Task/Task.styled.js","components/Boards/Task/Task.js","components/Boards/ColumnTask/ColumnTask.js","components/ScreensPage/MainDashboard/MainDashboard.styled.js","components/ScreensPage/MainDashboard/MainDashboard.js","components/ScreensPage/ScreensPage.js","redux/dashboards/dashboardsSelectors.js","redux/menuMode/menuModeSelectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n  align-items: start;\n\n  height: calc(100vh - 60px);\n\n  background-image: url(${props => props.bgcUrl});\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n\n  padding: 14px 20px 0 20px;\n\n  margin-left: ${props => (props.isOpen ? '225px' : '0')};\n  transition: all 250ms linear;\n\n  @media screen and (min-width: 768px) {\n    height: calc(100vh - 68px);\n    padding: 26px 32px 0 32px;\n\n    margin-left: ${props => (props.isOpen ? '260px' : '0')};\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding: 10px 24px 0 24px;\n    margin-left: 260px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  position: relative;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n  cursor: pointer;\n`;\n\nexport const Text = styled.span`\n  font-family: Poppins;\n  color: ${props => props.theme.themePopup.textMain};\n  font-size: 14px;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n`;\n\nexport const Icon = styled.svg`\n  width: 16px;\n  height: 16px;\n  stroke: ${props => props.theme.themePopup.icon};\n  transition: all 250ms linear;\n  fill: transparent;\n\n  ${props => props.isOpen && 'transform: rotate(-180deg)'};\n`;\n","import { Icon, Text, Wrapper } from './Filter.styled';\nimport sprite from '../../../images/sprite.svg';\n\nconst Filter = () => {\n  return (\n    <Wrapper>\n      <Icon>\n        <use href={sprite + '#icon-filter'} />\n      </Icon>\n\n      <Text>Filters</Text>\n    </Wrapper>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Header = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n  align-items: center;\n\n  margin-bottom: 10px;\n`;\n\nexport const Title = styled.h2`\n  color: ${props => props.theme.header.userName};\n  font-size: 18px;\n  font-family: 'Poppins';\n  font-style: normal;\n  font-weight: 500;\n  letter-spacing: -0.36px;\n`;\n","import Filter from '../Filter/Filter';\nimport { Header, Title } from './HeaderDashboard.styled';\n\nconst HeaderDashboard = ({ children }) => {\n  return (\n    <Header>\n      <Title>{children}</Title>\n\n      <Filter />\n    </Header>\n  );\n};\n\nexport default HeaderDashboard;\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  position: absolute;\n  top: 0;\n  right: calc(-100% - 18px);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n  width: 334px;\n  height: 56px;\n  border-radius: 8px;\n  background: #121212;\n  outline: none;\n  border: none;\n\n  padding: 14px 79px;\n  transition: all 250ms linear;\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nexport const IconWrapper = styled.div`\n  width: 28px;\n  height: 28px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n  background-color: #fff;\n`;\n\nexport const Icon = styled.svg`\n  width: 14px;\n  height: 14px;\n  stroke: #000;\n`;\n\nexport const Text = styled.p`\n  color: #fff;\n  font-size: 14px;\n  font-family: Poppins;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  width: 150px;\n`;\n","import { Button, Icon, IconWrapper, Text } from './AddButton.styled';\nimport sprite from '../../../images/sprite.svg';\n\nconst AddButton = () => {\n  return (\n    <Button type=\"button\">\n      <IconWrapper>\n        <Icon>\n          <use href={sprite + '#icon-plus'} />\n        </Icon>\n      </IconWrapper>\n\n      <Text>Add another column</Text>\n    </Button>\n  );\n};\n\nexport default AddButton;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  min-width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: space-between;\n  height: 100%;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n`;\n\nexport const TaskList = styled.ul`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  width: 350px;\n  gap: 8px;\n  height: 400px;\n\n  padding-right: 8px;\n\n  overflow-y: scroll;\n\n  ::-webkit-scrollbar {\n    width: 8px;\n  }\n\n  ::-webkit-scrollbar-track {\n    background-color: rgba(255, 255, 255, 0.1);\n    border: 1px solid rgba(0, 0, 0, 0.5);\n    border-radius: 12px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    border-radius: 12px;\n    background-color: #121212;\n  }\n`;\n\n// header\nexport const Header = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  border-radius: 8px;\n  width: 334px;\n\n  height: 56px;\n\n  padding: 14px 24px;\n\n  background-color: #121212;\n  color: #ffffff;\n  font-weight: 500;\n`;\n\nexport const Title = styled.h2`\n  color: #fff;\n  font-size: 14px;\n  font-family: 'Poppins';\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n`;\n\nexport const IconWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n`;\n\nexport const Icon = styled.svg`\n  width: 16px;\n  height: 16px;\n  stroke: ${props => props.theme.modal.plusColor};\n  cursor: pointer;\n\n  transition: all 250ms linear;\n\n  &:hover {\n    opacity: 0.4;\n  }\n`;\n\nexport const AuthFormSubmitButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 334px;\n\n  padding: 14px;\n  border: none;\n  background: #bedbb0;\n  border-radius: 8px;\n  margin-bottom: 16px;\n  color: #161616;\n  font-size: 14px;\n  font-family: 'Poppins';\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n\n  transition: all 250ms linear;\n\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nexport const ButtonPlus = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n\n  width: 28px;\n  height: 28px;\n  background-color: ${props => props.theme.modal.plusBackground};\n  margin-right: 8px;\n  padding: 7px;\n\n  cursor: pointer;\n`;\n\nexport const PlusIcon = styled.svg`\n  width: 14px;\n  height: 14px;\n  stroke: ${props => props.theme.modal.plusColor};\n`;\n","import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n  border-left: 4px solid teal;\n  border-radius: 8px;\n  /* min-width: 334px; */\n  height: 154px;\n  padding: 14px 24px;\n  background-color: #121212;\n  color: #ffffff;\n  list-style: none;\n`;\n\nexport const Title = styled.p`\n  font-size: 14px;\n  font-weight: 600;\n  margin-bottom: 8px;\n  letter-spacing: -0.28px;\n  color: #ffffff;\n`;\nexport const SubTitle = styled.p`\n  color: #ffffff80;\n  font-size: 8px;\n`;\nexport const SubText = styled.p`\n  color: #ffffff;\n  font-size: 10px;\n`;\nexport const TextHidden = styled.p`\n  font-size: 12px;\n  letter-spacing: -0.24px;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  line-height: 1.14;\n  color: #ffffff80;\n`;\nexport const Span = styled.span`\n  display: block;\n  height: 1px;\n  width: 100%;\n  background-color: #ffffff80;\n  margin: 21px 0 14px 0;\n`;\nexport const Wrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 14px;\n`;\n\nexport const ArrowIcon = styled.svg`\n  margin-left: 30px;\n  width: 16px;\n  height: 16px;\n  stroke: ${props => props.theme.modal.plusColor};\n`;\n\nexport const PensilIcon = styled.svg`\n  margin-left: 5px;\n\n  width: 16px;\n  height: 16px;\n  stroke: ${props => props.theme.modal.plusColor};\n`;\n\nexport const TrashIcon = styled.svg`\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  margin-left: 5px;\n  width: 16px;\n  height: 16px;\n  stroke: ${props => props.theme.modal.plusColor};\n`;\n\nexport const TitleName = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n","import React from 'react';\nimport {\n  ListItem,\n  Span,\n  TextHidden,\n  Title,\n  SubTitle,\n  SubText,\n  Wrap,\n  PensilIcon,\n  TrashIcon,\n  ArrowIcon,\n} from './Task.styled';\nimport sprite from '../../../images/sprite.svg';\n\nconst Task = () => {\n  return (\n    <ListItem>\n      <Title>The Watch Spot Design</Title>\n      <TextHidden>\n        Create a visually stunning and eye-catching watch dial design that\n        embodies our brand's essence of sleek aesthetics and modern elegance.\n        Your design should be unique, innovative, and reflective of the latest\n        trends in watch design.\n      </TextHidden>\n      <Span />\n      <Wrap>\n        <div>\n          <SubTitle>Priority</SubTitle>\n          <SubText>Low</SubText>\n        </div>\n        <div>\n          <SubTitle>Deadline</SubTitle>\n          <SubText>12/06/2023</SubText>\n        </div>\n        <div>\n          <ArrowIcon>\n            <use href={sprite + '#icon-arrow-circle-broken-right'} />\n          </ArrowIcon>\n          <PensilIcon>\n            <use href={sprite + '#icon-pencil'} />\n          </PensilIcon>\n          <TrashIcon>\n            <use href={sprite + '#icon-trash'} />\n          </TrashIcon>\n        </div>\n      </Wrap>\n    </ListItem>\n  );\n};\n\nexport default Task;\n","import sprite from '../../../images/sprite.svg';\n\nimport {\n  Wrapper,\n  Header,\n  AuthFormSubmitButton,\n  PlusIcon,\n  ButtonPlus,\n  TaskList,\n  IconWrapper,\n  Icon,\n  Content,\n  Title,\n} from './ColumnTask.Styled';\n\nimport Task from '../Task/Task';\n\nexport const ColumnTask = () => {\n  return (\n    <Wrapper>\n      <Content>\n        <Header>\n          <Title>To Do</Title>\n\n          <IconWrapper>\n            <Icon>\n              <use href={sprite + '#icon-pencil'} />\n            </Icon>\n\n            <Icon>\n              <use href={sprite + '#icon-trash'} />\n            </Icon>\n          </IconWrapper>\n        </Header>\n\n        <TaskList>\n          <Task />\n          <Task />\n          <Task />\n          <Task />\n        </TaskList>\n      </Content>\n\n      <AuthFormSubmitButton>\n        <ButtonPlus>\n          <PlusIcon>\n            <use href={sprite + '#icon-plus'} />\n          </PlusIcon>\n        </ButtonPlus>\n        Add another card\n      </AuthFormSubmitButton>\n    </Wrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 34px;\n  overflow-x: scroll;\n  width: 100%;\n  height: 100%;\n  margin-bottom: 8px;\n\n  ::-webkit-scrollbar {\n    height: 12px;\n    width: calc(100% - 24px);\n  }\n\n  ::-webkit-scrollbar-track {\n    background-color: rgba(255, 255, 255, 0.1);\n    border: 1px solid rgba(0, 0, 0, 0.5);\n    border-radius: 12px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    border-radius: 12px;\n    background-color: #121212;\n  }\n`;\n\nexport const ContentWrapper = styled.div`\n  position: relative;\n`;\n","import AddButton from 'components/Boards/AddButton/AddButton';\nimport { ColumnTask } from 'components/Boards/ColumnTask/ColumnTask';\nimport { ContentWrapper, Wrapper } from './MainDashboard.styled';\n\nconst MainDashboard = () => {\n  return (\n    <Wrapper>\n      <ContentWrapper>\n        <ColumnTask />\n        <AddButton />\n      </ContentWrapper>\n    </Wrapper>\n  );\n};\n\nexport default MainDashboard;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Wrapper } from './ScreensPage.styled';\nimport { selectIsMenuOpen } from 'redux/menuMode/menuModeSelectors';\nimport { useEffect } from 'react';\nimport { closeMenuMode } from 'redux/menuMode/menuModeSlice';\nimport { useParams } from 'react-router-dom';\nimport { getDashboardById } from 'redux/dashboards/dashboardsOperations';\n\nimport HeaderDashboard from './HeaderDashboard/HeaderDashboard';\nimport MainDashboard from './MainDashboard/MainDashboard';\nimport { selectAllDashboards } from 'redux/dashboards/dashboardsSelectors';\n\nconst ScreensPage = () => {\n  const dispatch = useDispatch();\n\n  const { boardName } = useParams();\n\n  const menuMode = useSelector(selectIsMenuOpen);\n  const currentDashboard = useSelector(\n    state => state.dashboards.currentDashboard.dashboard\n  );\n\n  const allDash = useSelector(selectAllDashboards);\n  const boardId = allDash.filter(item => item.name === boardName);\n\n  useEffect(() => {\n    dispatch(getDashboardById(boardId[0]?._id));\n  }, [boardId, boardName, dispatch]);\n\n  const handleScreenClick = () => {\n    if (menuMode) {\n      dispatch(closeMenuMode());\n    }\n  };\n\n  return (\n    <Wrapper\n      onClick={handleScreenClick}\n      bgcUrl={currentDashboard?.backgroundURL}\n      isOpen={menuMode}\n    >\n      <HeaderDashboard children={currentDashboard?.name} />\n\n      <MainDashboard />\n    </Wrapper>\n  );\n};\n\nexport default ScreensPage;\n","export const selectAllDashboards = state => state.dashboards.dashboards;\n","export const selectIsMenuOpen = state => state.menuMode.isMenuOpen;\n"],"names":["Wrapper","styled","props","bgcUrl","isOpen","Text","theme","themePopup","textMain","Icon","icon","href","sprite","Header","Title","header","userName","children","Button","IconWrapper","type","Content","TaskList","modal","plusColor","AuthFormSubmitButton","ButtonPlus","plusBackground","PlusIcon","ListItem","SubTitle","SubText","TextHidden","Span","Wrap","ArrowIcon","PensilIcon","TrashIcon","ColumnTask","ContentWrapper","dispatch","useDispatch","boardName","useParams","menuMode","useSelector","selectIsMenuOpen","currentDashboard","state","dashboards","dashboard","boardId","selectAllDashboards","filter","item","name","useEffect","getDashboardById","_id","onClick","closeMenuMode","backgroundURL","isMenuOpen"],"sourceRoot":""}