{"version":3,"file":"static/js/902.89d6ee9f.chunk.js","mappings":"iOAEaA,EAAUC,EAAAA,GAAAA,IAAH,ofAGM,SAAAC,GAAK,OAAIA,EAAMC,MAAV,IAOd,SAAAD,GAAK,OAAKA,EAAME,OAAS,QAAU,GAA9B,IAOH,SAAAF,GAAK,OAAKA,EAAME,OAAS,QAAU,GAA9B,I,kDCjBXJ,EAAUC,EAAAA,GAAAA,IAAH,6JASPI,EAAOJ,EAAAA,GAAAA,KAAH,qIAEN,SAAAC,GAAK,OAAIA,EAAMI,MAAMC,WAAWC,QAA3B,IAMHC,EAAOR,EAAAA,GAAAA,IAAH,0IAGL,SAAAC,GAAK,OAAIA,EAAMI,MAAMC,WAAWG,IAA3B,IAIb,SAAAR,GAAK,OAAIA,EAAME,QAAU,4BAApB,I,mBCXT,EAZe,WACb,OACE,UAAC,EAAD,YACE,SAACK,EAAD,WACE,gBAAKE,KAAMC,EAAAA,EAAS,oBAGtB,SAACP,EAAD,UAAM,cAGX,ECXYQ,EAASZ,EAAAA,GAAAA,IAAH,qGAMNa,EAAQb,EAAAA,GAAAA,GAAH,sLACP,SAAAC,GAAK,OAAIA,EAAMI,MAAMS,OAAOC,QAAvB,ICIhB,EAVwB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACzB,OACE,UAACJ,EAAD,YACE,SAACC,EAAD,UAAQG,KAER,SAAC,EAAD,MAGL,EC6BD,EA/BoB,WAClB,IAAMC,GAAWC,EAAAA,EAAAA,MAETC,GAAcC,EAAAA,EAAAA,MAAdD,UAEFE,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,GACvBC,GAAmBF,EAAAA,EAAAA,KACvB,SAAAG,GAAK,OAAIA,EAAMC,WAAWF,iBAAiBG,SAAtC,KAGPC,EAAAA,EAAAA,YAAU,WACRX,GAASY,EAAAA,EAAAA,IAAiBV,GAC3B,GAAE,CAACA,EAAWF,IAQf,OACE,SAAClB,EAAD,CACE+B,QARsB,WACpBT,GACFJ,GAASc,EAAAA,EAAAA,MAEZ,EAKG7B,OAAM,OAAEsB,QAAF,IAAEA,OAAF,EAAEA,EAAkBQ,cAC1B7B,OAAQkB,EAHV,UAKE,SAAC,EAAD,CAAiBL,SAAQ,OAAEQ,QAAF,IAAEA,OAAF,EAAEA,EAAkBS,QAGlD,C,uDCtCM,IAAMV,EAAmB,SAAAE,GAAK,OAAIA,EAAMJ,SAASa,UAAnB,C","sources":["components/ScreensPage/ScreensPage.styled.js","components/ScreensPage/Filter/Filter.styled.js","components/ScreensPage/Filter/Filter.js","components/ScreensPage/HeaderDashboard/HeaderDashboard.styled.js","components/ScreensPage/HeaderDashboard/HeaderDashboard.js","components/ScreensPage/ScreensPage.js","redux/menuMode/menuModeSelectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  height: calc(100vh - 60px);\n\n  background-image: url(${props => props.bgcUrl});\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n\n  padding: 14px 20px;\n\n  margin-left: ${props => (props.isOpen ? '225px' : '0')};\n  transition: all 250ms linear;\n\n  @media screen and (min-width: 768px) {\n    height: calc(100vh - 68px);\n    padding: 26px 32px;\n\n    margin-left: ${props => (props.isOpen ? '260px' : '0')};\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding: 10px 24px 0 10px;\n    margin-left: 260px;\n  }\n`;\n\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  position: relative;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n  cursor: pointer;\n`;\n\nexport const Text = styled.span`\n  font-family: Poppins;\n  color: ${props => props.theme.themePopup.textMain};\n  font-size: 14px;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n`;\n\nexport const Icon = styled.svg`\n  width: 16px;\n  height: 16px;\n  stroke: ${props => props.theme.themePopup.icon};\n  transition: all 250ms linear;\n  fill: transparent;\n\n  ${props => props.isOpen && 'transform: rotate(-180deg)'};\n`;\n","import { Icon, Text, Wrapper } from './Filter.styled';\nimport sprite from '../../../images/sprite.svg';\n\nconst Filter = () => {\n  return (\n    <Wrapper>\n      <Icon>\n        <use href={sprite + '#icon-filter'} />\n      </Icon>\n\n      <Text>Filters</Text>\n    </Wrapper>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const Title = styled.h2`\n  color: ${props => props.theme.header.userName};\n  font-size: 18px;\n  font-family: 'Poppins';\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.36px;\n`;\n","import Filter from '../Filter/Filter';\nimport { Header, Title } from './HeaderDashboard.styled';\n\nconst HeaderDashboard = ({ children }) => {\n  return (\n    <Header>\n      <Title>{children}</Title>\n\n      <Filter />\n    </Header>\n  );\n};\n\nexport default HeaderDashboard;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Wrapper } from './ScreensPage.styled';\nimport { selectIsMenuOpen } from 'redux/menuMode/menuModeSelectors';\nimport { useEffect } from 'react';\nimport { closeMenuMode } from 'redux/menuMode/menuModeSlice';\nimport { useParams } from 'react-router-dom';\nimport { getDashboardById } from 'redux/dashboards/dashboardsOperations';\nimport HeaderDashboard from './HeaderDashboard/HeaderDashboard';\n\nconst ScreensPage = () => {\n  const dispatch = useDispatch();\n\n  const { boardName } = useParams();\n\n  const menuMode = useSelector(selectIsMenuOpen);\n  const currentDashboard = useSelector(\n    state => state.dashboards.currentDashboard.dashboard\n  );\n\n  useEffect(() => {\n    dispatch(getDashboardById(boardName));\n  }, [boardName, dispatch]);\n\n  const handleScreenClick = () => {\n    if (menuMode) {\n      dispatch(closeMenuMode());\n    }\n  };\n\n  return (\n    <Wrapper\n      onClick={handleScreenClick}\n      bgcUrl={currentDashboard?.backgroundURL}\n      isOpen={menuMode}\n    >\n      <HeaderDashboard children={currentDashboard?.name} />\n    </Wrapper>\n  );\n};\n\nexport default ScreensPage;\n","export const selectIsMenuOpen = state => state.menuMode.isMenuOpen;\n"],"names":["Wrapper","styled","props","bgcUrl","isOpen","Text","theme","themePopup","textMain","Icon","icon","href","sprite","Header","Title","header","userName","children","dispatch","useDispatch","boardName","useParams","menuMode","useSelector","selectIsMenuOpen","currentDashboard","state","dashboards","dashboard","useEffect","getDashboardById","onClick","closeMenuMode","backgroundURL","name","isMenuOpen"],"sourceRoot":""}