{"version":3,"file":"static/js/452.85e42fa9.chunk.js","mappings":"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","sources":["components/Modals/BasicModal/BasicModal.styled.js","components/Modals/BasicModal/BasicModal.js","components/ScreensPage/ScreensPage.styled.js","components/ScreensPage/Filter/Filter.styled.js","components/ScreensPage/Filter/Filter.js","components/ScreensPage/HeaderDashboard/HeaderDashboard.styled.js","components/ScreensPage/HeaderDashboard/HeaderDashboard.js","components/Boards/AddButton/AddButton.styled.js","components/Boards/AddButton/AddButton.js","components/Cards/Card.styled.js","components/Cards/Popitem.js","components/Modals/CardModal/CardModal.styled.js","components/Modals/CardModal/EditCardModal/EditCardModal.js","components/Cards/Card.js","components/Modals/ColumnModal/ColumnModal.styled.js","components/Modals/ColumnModal/EditColumnModal/EditColumnModal.js","components/Boards/ColumnTask/ColumnTask.Styled.js","components/Modals/CardModal/AddCardModal/AddCardModal.js","components/Boards/ColumnTask/ColumnTask.js","components/ScreensPage/MainDashboard/MainDashboard.styled.js","components/Modals/ColumnModal/AddColumnModal/AddColumnModal.js","components/ScreensPage/MainDashboard/MainDashboard.js","components/ScreensPage/ScreensPage.js","redux/dashboards/dashboardsSelectors.js","redux/menuMode/menuModeSelectors.js"],"sourcesContent":["import styled from 'styled-components';\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\n\nexport const ModalWindow = styled(Modal)`\n  backdrop-filter: blur(2px);\n`;\n\nexport const ModalField = styled(Box)`\n  padding: 24px;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  border-radius: 8px;\n\n  border: 1px solid ${props => props.theme.modal.border};\n  background: ${props => props.theme.modal.backgroundMain};\n  outline: none;\n\n  width: 335px;\n\n  @media screen and (min-width: 768px) {\n    width: 350px;\n  }\n\n  &.filter {\n    width: 300px;\n  }\n\n  &.needHelp {\n    box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.05);\n\n    @media screen and (min-width: 768px) {\n      width: 400px;\n    }\n  }\n\n  &.editProfile {\n    box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.05);\n\n    @media screen and (min-width: 768px) {\n      width: 400px;\n    }\n  }\n`;\n\nexport const CloseModal = styled.svg`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n  stroke: ${props => props.theme.modal.iconClose};\n  width: 18px;\n  height: 18px;\n  cursor: pointer;\n  transition: all 250ms linear;\n\n  &:hover {\n    opacity: 0.8;\n    scale: 1.2;\n  }\n`;\n","import * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { ModalField, CloseModal, ModalWindow } from './BasicModal.styled';\n\nimport sprite from '../../../images/sprite.svg';\n\nconst BasicModal = ({ children, name, open, closeModal }) => {\n  const [modalClass, setModalClass] = useState(``);\n\n  const handleBtnClick = name => {\n    if (name === 'NeedHelp') {\n      setModalClass('needHelp');\n    } else if (name === 'Filters') {\n      setModalClass('filter');\n    } else if (name === 'EditProfile') {\n      setModalClass('editProfile');\n    } else {\n      setModalClass('');\n    }\n  };\n\n  useEffect(() => {\n    handleBtnClick(name);\n  }, [name]);\n\n  return (\n    <div style={{ position: 'absolute' }}>\n      <ModalWindow\n        open={open}\n        onClose={closeModal}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <ModalField className={modalClass}>\n          <CloseModal onClick={closeModal} type=\"button\">\n            <use href={sprite + '#icon-x-close'} width={18} height={18} />\n          </CloseModal>\n          {children}\n        </ModalField>\n      </ModalWindow>\n    </div>\n  );\n};\n\nexport default BasicModal;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n  align-items: start;\n\n  height: calc(100vh - 60px);\n\n  background-image: url(${props => props.bgcUrl});\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n\n  padding: 14px 20px 0 20px;\n\n  margin-left: ${props => (props.isOpen ? '225px' : '0')};\n  transition: all 250ms linear;\n\n  @media screen and (min-width: 768px) {\n    height: calc(100vh - 68px);\n    padding: 26px 32px 0 32px;\n\n    margin-left: ${props => (props.isOpen ? '260px' : '0')};\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding: 10px 24px 0 24px;\n    margin-left: 260px;\n  }\n`;\n\n\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  position: relative;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n  cursor: pointer;\n`;\n\nexport const Text = styled.span`\n  font-family: Poppins;\n  color: ${props => props.theme.themePopup.textMain};\n  font-size: 14px;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n`;\n\nexport const Icon = styled.svg`\n  width: 16px;\n  height: 16px;\n  stroke: ${props => props.theme.themePopup.icon};\n  transition: all 250ms linear;\n  fill: transparent;\n\n  ${props => props.isOpen && 'transform: rotate(-180deg)'};\n`;\n","import { Icon, Text, Wrapper } from './Filter.styled';\nimport sprite from '../../../images/sprite.svg';\n\nconst Filter = () => {\n  return (\n    <Wrapper>\n      <Icon>\n        <use href={sprite + '#icon-filter'} />\n      </Icon>\n\n      <Text>Filters</Text>\n    </Wrapper>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Header = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n  align-items: center;\n\n  margin-bottom: 10px;\n`;\n\nexport const Title = styled.h2`\n  color: ${props => props.theme.header.userName};\n  font-size: 18px;\n  font-family: 'Poppins';\n  font-style: normal;\n  font-weight: 500;\n  letter-spacing: -0.36px;\n`;\n","import Filter from '../Filter/Filter';\nimport { Header, Title } from './HeaderDashboard.styled';\n\nconst HeaderDashboard = ({ children }) => {\n  return (\n    <Header>\n      <Title>{children}</Title>\n\n      <Filter />\n    </Header>\n  );\n};\n\nexport default HeaderDashboard;\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  position: absolute;\n  top: 0;\n\n  right: ${props => (props.length === 0 ? '-334px' : '-368px')};\n  width: 334px;\n  height: 56px;\n  padding: 14px 79px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n\n  border-radius: 8px;\n  background: ${props => props.theme.addColumnButton.background};\n  outline: none;\n  border: none;\n\n  transition: all 250ms linear;\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.9;\n  }\n`;\n\nexport const IconWrapper = styled.div`\n  width: 28px;\n  height: 28px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n  background-color: ${props => props.theme.addColumnButton.plusBackground};\n\n  transition: all 250ms linear;\n\n  cursor: pointer;\n\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n\nexport const Icon = styled.svg`\n  width: 14px;\n  height: 14px;\n  stroke: ${props => props.theme.addColumnButton.plusColor};\n`;\n\nexport const Text = styled.p`\n  color: ${props => props.theme.addColumnButton.color};\n  font-size: 14px;\n  font-family: Poppins;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  width: 150px;\n`;\n","import { Button, Icon, IconWrapper, Text } from './AddButton.styled';\nimport sprite from '../../../images/sprite.svg';\nimport { useSelector } from 'react-redux';\nimport { selectColumnsLength } from 'redux/dashboards/dashboardsSelectors';\n\nconst AddButton = ({ openModal }) => {\n  const columnsLength = useSelector(selectColumnsLength);\n\n  return (\n    <Button length={columnsLength} onClick={openModal} type=\"button\">\n      <IconWrapper>\n        <Icon>\n          <use href={sprite + '#icon-plus'} />\n        </Icon>\n      </IconWrapper>\n\n      <Text>Add another column</Text>\n    </Button>\n  );\n};\n\nexport default AddButton;\n","import styled from 'styled-components';\n\n// витягнути пропси і прокинути динамічні кольори бордів (пріоритетність)\nexport const CardWrapper = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  padding: 14px 20px 14px 24px;\n\n  width: 100%;\n  min-height: 154px;\n  border-radius: 8px;\n  background-color: ${props => props.theme.column.backgroundMain};\n  overflow: hidden;\n  /* border-left: 4px solid rgba(143, 161, 208, 1); */\n\n  opacity: ${props => (props.expired ? 0.4 : 1)};\n\n  &::before {\n    content: '';\n    position: absolute;\n    left: 0;\n    top: 50%;\n    transform: translateY(-50%);\n    width: 4px;\n    height: 100%;\n\n    background-color: ${props =>\n      props.priority === 'without' && 'rgb(128, 128, 128)'};\n    background-color: ${props =>\n      props.priority === 'low' && 'rgba(143, 161, 208, 1)'};\n    background-color: ${props =>\n      props.priority === 'medium' && 'rgba(224, 156, 181, 1)'};\n    background-color: ${props =>\n      props.priority === 'high' && 'rgba(190, 219, 176, 1)'};\n  }\n`;\n\nexport const TopWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport const Title = styled.h4`\n  color: ${props => props.theme.column.textMain};\n  font-size: 14px;\n  font-family: 'Poppins';\n  font-weight: 600;\n  letter-spacing: -0.28px;\n  font-size: 14px;\n`;\n\nexport const Text = styled.p`\n  position: relative;\n  display: flex;\n  color: ${props => props.theme.column.textSecondary};\n\n  font-size: 12px;\n  font-family: 'Poppins';\n  font-style: normal;\n  font-weight: 400;\n  line-height: 16px;\n  letter-spacing: -0.24px;\n\n  &::after {\n    content: '';\n    position: absolute;\n    bottom: -18px;\n    width: 100%;\n    height: 1px;\n    background-color: ${props => props.theme.column.borderColor};\n  }\n`;\n\nexport const BottomWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n`;\n\nexport const Stats = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  gap: 14px;\n`;\n\nexport const Priority = styled.p`\n  position: relative;\n\n  display: flex;\n  align-items: flex-end;\n  padding-left: 16px;\n  gap: 4px;\n\n  color: ${props => props.theme.column.textMain};\n  font-size: 10px;\n  font-family: 'Poppins';\n  font-weight: 400;\n  letter-spacing: -0.2px;\n\n  &::before {\n    content: 'Priority';\n    position: absolute;\n    left: 0;\n    top: 0px;\n    color: ${props => props.theme.column.textSecondary};\n    font-size: 8px;\n    font-family: 'Poppins';\n    font-weight: 400;\n    letter-spacing: -0.16px;\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    left: 0;\n    bottom: 2px;\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n\n    background-color: ${props =>\n      props.priority === 'without' && 'rgb(128, 128, 128)'};\n    background-color: ${props =>\n      props.priority === 'low' && 'rgba(143, 161, 208, 1)'};\n    background-color: ${props =>\n      props.priority === 'medium' && 'rgba(224, 156, 181, 1)'};\n    background-color: ${props =>\n      props.priority === 'high' && 'rgba(190, 219, 176, 1)'};\n  }\n`;\n\nexport const Deadline = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n\n  gap: 4px;\n\n  color: ${props => props.theme.column.textMain};\n  font-size: 10px;\n  font-family: 'Poppins';\n  font-weight: 400;\n  letter-spacing: -0.2px;\n\n  &::before {\n    content: 'Deadline';\n    color: ${props => props.theme.column.textSecondary};\n    font-size: 8px;\n    font-family: 'Poppins';\n    font-weight: 400;\n    letter-spacing: -0.16px;\n  }\n`;\n\n// icons\nexport const IconsGroup = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: end;\n  gap: 8px;\n`;\n\nexport const ActiveIcon = styled.svg`\n  height: 16px;\n  width: 16px;\n  fill: transparent;\n  stroke: ${props => props.theme.column.icon};\n\n  transition: all 150ms linear;\n  cursor: pointer;\n\n  &:hover {\n    stroke: ${props => props.theme.column.textSecondary};\n  }\n`;\n\nexport const IconBellWrapper = styled.div`\n  height: 16px;\n  width: 16px;\n  background-color: rgba(190, 219, 176, 1);\n  filter: blur(5.5px);\n`;\n\nexport const IconBell = styled.svg`\n  position: absolute;\n  height: 16px;\n  width: 16px;\n  stroke: rgba(190, 219, 176, 1);\n  fill: transparent;\n  filter: none;\n  transition: all 150ms linear;\n`;\n\nexport const MoverWrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: end;\n  align-items: center;\n`;\n\n// popup items\nexport const PopupWrapper = styled.ul`\n  position: absolute;\n  bottom: 130%;\n  left: 50%;\n  transform: translateX(-60%);\n  display: inline-flex;\n  min-width: 160px;\n  padding: 18px;\n  flex-direction: column;\n  justify-content: center;\n  border-radius: 8px;\n  border: 1px solid ${props => props.theme.themePopup.border};\n  background: ${props => props.theme.themePopup.background};\n  box-shadow: 0px 4px 16px 0px ${props => props.theme.themePopup.boxShadow};\n  gap: 4px;\n  z-index: 99;\n`;\n\nexport const PopupItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 8px;\n  width: 100%;\n  color: ${props => props.theme.themePopup.textSecondary};\n  stroke: ${props => props.theme.themePopup.textSecondary};\n  fill: transparent;\n  transition: all 250ms linear;\n\n  &:hover {\n    color: ${props => props.theme.themePopup.textAccent};\n    stroke: ${props => props.theme.themePopup.textAccent};\n  }\n\n  cursor: pointer;\n`;\n\nexport const PopupText = styled.p`\n  font-size: 14px;\n  font-family: 'Poppins';\n  font-weight: 400;\n  letter-spacing: -0.28px;\n`;\n\nexport const PopupIcon = styled.svg`\n  height: 16px;\n  width: 16px;\n`;\n","import { PopupWrapper, PopupItem, PopupText, PopupIcon } from './Card.styled';\nimport sprite from '../../images/sprite.svg';\n\nconst CardmovePopup = () => {\n  // text cutting func\n  const checkTextLength = text => {\n    const str = text.split('');\n\n    if (str.length <= 12) {\n      return str.join('');\n    }\n    return str.splice(0, 8).join('') + '...';\n  };\n\n  return (\n    <PopupWrapper>\n      {/* {dashboardsArra.map(item => item.name)} */}\n\n      <PopupItem>\n        <PopupText>{checkTextLength('In progress')}</PopupText>\n\n        <PopupIcon>\n          <use href={sprite + '#icon-arrow-circle-broken-right'} />\n        </PopupIcon>\n      </PopupItem>\n\n      <PopupItem>\n        <PopupText>{checkTextLength('Done')}</PopupText>\n\n        <PopupIcon>\n          <use href={sprite + '#icon-arrow-circle-broken-right'} />\n        </PopupIcon>\n      </PopupItem>\n\n      <PopupItem>\n        <PopupText>{checkTextLength('Future')}</PopupText>\n\n        <PopupIcon>\n          <use href={sprite + '#icon-arrow-circle-broken-right'} />\n        </PopupIcon>\n      </PopupItem>\n    </PopupWrapper>\n  );\n};\n\nexport default CardmovePopup;\n","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const Section = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: start;\n`;\n\nexport const SectionTitle = styled.h2`\n  color: ${props => props.theme.modal.textMain};\n  font-size: 18px;\n  font-family: 'Poppins';\n  font-weight: 500;\n  letter-spacing: -0.36px;\n  margin-bottom: 24px;\n`;\n\nexport const FormWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: start;\n\n  margin-bottom: 24px;\n\n  &:last-of-type {\n    margin-bottom: 14px;\n  }\n`;\n\nexport const LabelInput = styled.label`\n  width: 100%;\n`;\n\nexport const TitleInput = styled(Field)`\n  width: 100%;\n  height: 49px;\n  padding: 14px 18px;\n\n  font-size: 14px;\n  font-family: 'Poppins';\n  letter-spacing: -0.28px;\n\n  background-color: ${props => props.theme.modal.backgroundMain};\n  border: 1px solid ${props => props.theme.modal.buttonBackground};\n  box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n  outline: none;\n  border-radius: 8px;\n\n  color: ${props => props.theme.modal.textMain};\n  transition: all 250ms ease;\n  opacity: 0.4;\n\n  &::placeholder {\n    color: ${props => props.theme.modal.textMain};\n    font-size: 14px;\n    font-family: 'Poppins';\n    letter-spacing: -0.28px;\n  }\n\n  &:focus {\n    opacity: 1;\n  }\n`;\n\nexport const Textarea = styled(Field)`\n  resize: none;\n  width: 100%;\n  height: 154px;\n  padding: 14px 18px;\n\n  font-size: 14px;\n  font-family: 'Poppins';\n  letter-spacing: -0.28px;\n\n  margin-top: 14px;\n  box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n\n  background-color: ${props => props.theme.modal.backgroundMain};\n  border: 1px solid ${props => props.theme.modal.buttonBackground};\n  box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n  outline: none;\n  border-radius: 8px;\n\n  color: ${props => props.theme.modal.textMain};\n  transition: all 250ms ease;\n  opacity: 0.4;\n\n  &::placeholder {\n    color: ${props => props.theme.modal.textMain};\n    font-size: 14px;\n    font-family: 'Poppins';\n    letter-spacing: -0.28px;\n  }\n\n  &:focus {\n    opacity: 1;\n  }\n`;\n\nexport const AuthFormSubmitButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 10px;\n  padding: 14px;\n  border: none;\n  background: ${props => props.theme.modal.buttonBackground};\n  border-radius: 8px;\n\n  font-family: 'Poppins';\n  font-size: 14px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n  color: ${props => props.theme.modal.buttonText};\n\n  transition: all 150ms linear;\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nexport const DefaultRadioBtn = styled(Field)`\n  appearance: none;\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n`;\n\nexport const FormTitle = styled.h3`\n  color: ${props => props.theme.modal.textSecondary};\n  font-size: 12px;\n  font-family: 'Poppins';\n  font-weight: 400;\n  letter-spacing: -0.24px;\n  margin-bottom: 4px;\n`;\n\nexport const RadioBtnWrapper = styled.ul`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 4px;\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  width: 14px;\n  height: 14px;\n  border-radius: 14px;\n\n  cursor: pointer;\n\n  &.active {\n    border: ${props =>\n      props.value === 'without' && '2px solid rgb(128,128,128)'};\n    border: ${props =>\n      props.value === 'low' && '2px solid rgba(143, 161, 208, 1)'};\n    border: ${props =>\n      props.value === 'medium' && '2px solid rgba(224, 156, 181, 1)'};\n    border: ${props =>\n      props.value === 'high' && '2px solid rgba(190, 219, 176, 1)'};\n  }\n`;\n\n// need fix grey color\nexport const LabelItem = styled.div`\n  width: 14px;\n  height: 14px;\n  border-radius: 14px;\n  z-index: 99;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  background-color: ${props => props.value === 'without' && 'rgb(128,128,128)'};\n  background-color: ${props =>\n    props.value === 'low' && 'rgba(143, 161, 208, 1)'};\n  background-color: ${props =>\n    props.value === 'medium' && 'rgba(224, 156, 181, 1)'};\n  background-color: ${props =>\n    props.value === 'high' && 'rgba(190, 219, 176, 1)'};\n\n  transition: all 250ms linear;\n\n  &.active {\n    width: 6px;\n    height: 6px;\n  }\n`;\n\nexport const ButtonPlus = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n\n  width: 28px;\n  height: 28px;\n  background-color: ${props => props.theme.modal.plusBackground};\n  margin-right: 8px;\n  padding: 7px;\n`;\n\nexport const PlusIcon = styled.svg`\n  width: 14px;\n  height: 14px;\n  stroke: ${props => props.theme.modal.plusColor};\n`;\n\nexport const ErrorSection = styled(ErrorMessage)`\n  padding-left: 14px;\n  color: #c04d4d;\n  font-size: 18px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.36px;\n`;\n\nexport const ModalForm = styled(Form)`\n  margin: 0;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Wrapper = styled.div`\n  position: relative;\n  width: 233px;\n\n  .react-datepicker {\n    overflow: hidden;\n\n    margin-top: -28px;\n    border-radius: 8px;\n    border: 1px solid ${props => props.theme.modal.buttonBackground};\n\n    background: ${props => props.theme.modal.backgroundMain};\n    outline: none;\n    width: 233px;\n    position: absolute;\n    right: -307px;\n    top: -190px;\n\n    &__input-container {\n      appearance: none;\n      position: absolute;\n      width: 1px;\n      height: 1px;\n      margin: -1px;\n      border: 0;\n      padding: 0;\n\n      white-space: nowrap;\n      clip-path: inset(100%);\n      clip: rect(0 0 0 0);\n      overflow: hidden;\n    }\n\n    &__navigation {\n      position: absolute;\n      top: 8px;\n    }\n\n    &__navigation-icon {\n      width: 4px;\n      height: 8px;\n      color: ${props => props.theme.modal.textAccent};\n    }\n\n    &__month {\n      margin: 0;\n    }\n\n    &__week {\n      color: ${props => props.theme.modal.unactiveDay};\n      font-size: 14px;\n      font-family: Poppins;\n      line-height: 18px;\n      letter-spacing: -0.28px;\n\n      &:last-of-type {\n        margin-bottom: 18px;\n      }\n    }\n\n    &__day {\n      width: 24px;\n      height: 24px;\n      color: ${props => props.theme.modal.textMain};\n      font-size: 14px;\n      font-family: Poppins;\n      width: 1.5rem;\n\n      transition: all 250ms ease;\n\n      &--today {\n        color: ${props => props.theme.modal.today};\n        background: ${props => props.theme.modal.buttonBackground};\n        border-radius: 50%;\n      }\n\n      &--outside-month {\n        width: 24px;\n        height: 24px;\n        color: ${props => props.theme.modal.unactiveDay};\n      }\n\n      &--keyboard-selected {\n        border-radius: 24px;\n        background: ${props => props.theme.modal.buttonBackground};\n        color: ${props => props.theme.modal.today};\n      }\n\n      &:hover {\n        border-radius: 24px;\n        background: ${props => props.theme.modal.buttonBackground};\n        color: ${props => props.theme.modal.today};\n      }\n    }\n\n    &__day--disabled {\n      width: 24px;\n      height: 24px;\n      color: ${props => props.theme.modal.unactiveDay};\n    }\n\n    &__day--selected {\n      border-radius: 24px;\n      background: ${props => props.theme.modal.buttonBackground};\n      color: ${props => props.theme.modal.today};\n    }\n\n    &__triangle {\n      display: none;\n    }\n\n    &__header {\n      background-color: ${props => props.theme.modal.backgroundMain};\n      width: 231px;\n      border-bottom: none;\n      padding: 18px 18px 14px;\n    }\n\n    &__day-names {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      gap: 5px;\n      border-top: 1px solid ${props => props.theme.modal.unactiveDay};\n      padding-top: 14px;\n    }\n\n    &__day-name {\n      color: ${props => props.theme.modal.textSecondary};\n      font-size: 14px;\n      font-family: 'Poppins';\n      font-style: normal;\n      font-weight: 500;\n      line-height: normal;\n      letter-spacing: -0.28px;\n    }\n\n    &__current-month {\n      color: ${props => props.theme.modal.textMain};\n      font-size: 16px;\n      font-family: Poppins;\n      font-weight: 500;\n      letter-spacing: -0.32px;\n      margin-bottom: 14px;\n    }\n  }\n  .react-datepicker__input-container input {\n  }\n`;\n\nexport const DateTitle = styled.div`\n  color: ${props => props.theme.modal.buttonBackground};\n  font-size: 14px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n\n  cursor: pointer;\n`;\n","import React, { useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport {\n  FormWrapper,\n  Section,\n  AuthFormSubmitButton,\n  TitleInput,\n  SectionTitle,\n  Textarea,\n  Label,\n  PlusIcon,\n  DefaultRadioBtn,\n  LabelItem,\n  RadioBtnWrapper,\n  FormTitle,\n  Wrapper,\n  DateTitle,\n  ModalForm,\n  ErrorSection,\n  ButtonPlus,\n} from '../CardModal.styled';\nimport sprite from '../../../../images/sprite.svg';\n\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { editCard } from 'redux/dashboards/dashboardsOperations';\n\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().required('Title is required!'),\n  description: Yup.string()\n    .max(230, 'Name must be at most 230 characters')\n    .required('Description is required'),\n});\n\nconst options = ['low', 'medium', 'high', 'without'];\n\nconst EditCardModal = ({ card, closeModal }) => {\n  const dispatch = useDispatch();\n  const { _id, title, deadline, description, priority } = card;\n\n  const [selectedLabel, setSelectedLabel] = useState(priority);\n  const [startDate, setStartDate] = useState('');\n  const customDate =\n    startDate !== ''\n      ? `${startDate.getDate()}/0${\n          startDate.getMonth() + 1\n        }/${startDate.getFullYear()}`\n      : null;\n\n  const dateOptions = {\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit',\n  };\n\n  const dateForEdit = new Date(deadline);\n  const dateLabel = dateForEdit.toLocaleString('en-GB', dateOptions);\n\n  const initialValues = {\n    title,\n    description,\n    priority: selectedLabel,\n  };\n\n  let editedDeadline = startDate;\n\n  const handleSubmit = (values, { resetForm }) => {\n    const { title, description, priority } = values;\n\n    if (editedDeadline === '') {\n      editedDeadline = deadline;\n    }\n\n    dispatch(\n      editCard({\n        cardId: _id,\n        title,\n        description,\n        priority,\n        deadline: editedDeadline,\n      })\n    );\n    resetForm();\n    closeModal();\n  };\n\n  return (\n    <Section>\n      <SectionTitle>Edit Card</SectionTitle>\n\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        <ModalForm>\n          <FormWrapper>\n            <ErrorSection name=\"title\" component=\"div\" />\n            <TitleInput\n              type=\"text\"\n              id=\"title\"\n              name=\"title\"\n              placeholder=\"Title\"\n            />\n\n            <ErrorSection name=\"description\" component=\"div\" />\n            <Textarea\n              component=\"textarea\"\n              name=\"description\"\n              id=\"description\"\n              type=\"text\"\n              placeholder=\"Description\"\n            />\n          </FormWrapper>\n\n          <FormWrapper>\n            <FormTitle>Icons </FormTitle>\n            <RadioBtnWrapper>\n              {options.map((el, idx) => (\n                <Label\n                  key={idx}\n                  value={el}\n                  className={selectedLabel === el ? 'active' : ''}\n                >\n                  <LabelItem\n                    onClick={() => setSelectedLabel(el)}\n                    value={el}\n                    className={selectedLabel === el ? 'active' : ''}\n                  />\n\n                  <DefaultRadioBtn type=\"radio\" value={el} name=\"priority\" />\n                </Label>\n              ))}\n            </RadioBtnWrapper>\n          </FormWrapper>\n\n          <FormWrapper>\n            <FormTitle>Deadline </FormTitle>\n            <DateTitle\n              onClick={() => document.querySelector('.input-ref').click()}\n            >\n              {/* {startDate} */}\n              {startDate !== '' ? customDate : dateLabel}\n            </DateTitle>\n            <Wrapper>\n              <DatePicker\n                className=\"input-ref\"\n                minDate={new Date()}\n                timeFormat=\"dd/MM/yyyy\"\n                selected={startDate}\n                onChange={date => setStartDate(date)}\n              />\n            </Wrapper>\n          </FormWrapper>\n\n          <AuthFormSubmitButton type=\"submit\">\n            <ButtonPlus>\n              <PlusIcon>\n                <use href={sprite + '#icon-plus'} />\n              </PlusIcon>\n            </ButtonPlus>\n            Edit\n          </AuthFormSubmitButton>\n        </ModalForm>\n      </Formik>\n    </Section>\n  );\n};\n\nexport default EditCardModal;\n","import { useState, useRef, useEffect } from 'react';\nimport sprite from '../../images/sprite.svg';\nimport CardmovePopup from './Popitem';\nimport { useDispatch } from 'react-redux';\n\nimport {\n  Title,\n  CardWrapper,\n  Text,\n  IconsGroup,\n  IconBell,\n  TopWrapper,\n  BottomWrapper,\n  Stats,\n  Priority,\n  Deadline,\n  ActiveIcon,\n  MoverWrapper,\n  IconBellWrapper,\n} from './Card.styled';\nimport { deleteCard } from 'redux/dashboards/dashboardsOperations';\nimport BasicModal from 'components/Modals/BasicModal/BasicModal';\nimport EditCardModal from 'components/Modals/CardModal/EditCardModal/EditCardModal';\n\nconst Card = ({ item }) => {\n  const dispatch = useDispatch();\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const moveIconRef = useRef();\n  const [openCardModal, setOpenCardModal] = useState(false);\n  const handleOpenCardModal = () => setOpenCardModal(true);\n  const handleCloseCardModal = () => setOpenCardModal(false);\n\n  const { title, _id, deadline, description, priority } = item;\n\n  const options = {\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit',\n  };\n\n  const today = new Date().toLocaleString('en-GB', options);\n  const parsedDate = new Date(deadline);\n\n  const formatedDeadline =\n    parsedDate && parsedDate.toLocaleString('en-GB', options);\n\n  // toggle popup func\n  const handleIconMoveClick = () => setIsPopupOpen(!isPopupOpen);\n\n  // text cutting func\n  const checkTextLength = text => {\n    const str = text.split('');\n\n    if (str.length <= 80) {\n      return str.join('');\n    }\n    return str.splice(0, 80).join('') + '...';\n  };\n\n  // backdrop closing popup func\n  const handleOutsideClick = event => {\n    const path = event.composedPath();\n\n    if (!path.includes(moveIconRef.current)) {\n      setIsPopupOpen(false);\n    }\n  };\n\n  useEffect(() => {\n    document.body.addEventListener('click', handleOutsideClick);\n\n    return () => {\n      document.body.removeEventListener('click', handleOutsideClick);\n    };\n  }, []);\n\n  const expiredCard = today > formatedDeadline;\n\n  return (\n    <>\n      {' '}\n      <CardWrapper priority={priority} expired={expiredCard}>\n        <TopWrapper>\n          <Title>{title}</Title>\n\n          <Text>{checkTextLength(description)}</Text>\n        </TopWrapper>\n\n        <BottomWrapper>\n          <Stats>\n            <Priority priority={priority}>{priority}</Priority>\n\n            <Deadline>{formatedDeadline}</Deadline>\n          </Stats>\n\n          <IconsGroup>\n            {today === formatedDeadline && (\n              <>\n                <IconBell aria-label=\"bell icon\">\n                  <use href={sprite + `#icon-bell`} />\n                </IconBell>\n                <IconBellWrapper></IconBellWrapper>\n              </>\n            )}\n\n            <MoverWrapper>\n              <ActiveIcon\n                ref={moveIconRef}\n                aria-label=\"move card icon\"\n                onClick={handleIconMoveClick}\n              >\n                <use href={sprite + `#icon-arrow-circle-broken-right`} />\n              </ActiveIcon>\n\n              {isPopupOpen && <CardmovePopup />}\n            </MoverWrapper>\n\n            <ActiveIcon onClick={handleOpenCardModal} aria-label=\"edit icon\">\n              <use href={sprite + `#icon-pencil`} />\n            </ActiveIcon>\n\n            <ActiveIcon\n              aria-label=\"edit icon\"\n              onClick={() => dispatch(deleteCard(_id))}\n            >\n              <use href={sprite + `#icon-trash`} />\n            </ActiveIcon>\n          </IconsGroup>\n        </BottomWrapper>\n      </CardWrapper>\n      <BasicModal\n        open={openCardModal}\n        closeModal={handleCloseCardModal}\n        children={\n          <EditCardModal card={item} closeModal={handleCloseCardModal} />\n        }\n      />\n    </>\n  );\n};\n\nexport default Card;\n","import styled from 'styled-components';\n\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const Section = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: start;\n`;\n\nexport const SectionTitle = styled.h2`\n  color: ${props => props.theme.modal.textMain};\n  font-size: 18px;\n  font-family: 'Poppins';\n  font-weight: 500;\n  letter-spacing: -0.36px;\n  margin-bottom: 24px;\n`;\n\nexport const FormWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: start;\n\n  margin-bottom: 24px;\n`;\n\nexport const LabelInput = styled.label`\n  width: 100%;\n`;\n\nexport const TitleInput = styled(Field)`\n  width: 100%;\n  height: 49px;\n  padding: 14px 18px;\n\n  font-size: 14px;\n  font-family: 'Poppins';\n  letter-spacing: -0.28px;\n\n  background-color: ${props => props.theme.modal.backgroundMain};\n  border: 1px solid ${props => props.theme.modal.buttonBackground};\n  box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n  outline: none;\n  border-radius: 8px;\n\n  color: ${props => props.theme.modal.textMain};\n  transition: all 250ms ease;\n  opacity: 0.4;\n\n  &::placeholder {\n    color: ${props => props.theme.modal.textMain};\n    font-size: 14px;\n    font-family: 'Poppins';\n    letter-spacing: -0.28px;\n  }\n\n  &:focus {\n    opacity: 1;\n  }\n`;\n\nexport const AuthFormSubmitButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 10px;\n  padding: 14px;\n  border: none;\n  background: ${props => props.theme.modal.buttonBackground};\n  border-radius: 8px;\n\n  font-family: 'Poppins';\n  font-size: 14px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n  color: ${props => props.theme.modal.buttonText};\n\n  transition: all 150ms linear;\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nexport const ButtonPlus = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n\n  width: 28px;\n  height: 28px;\n  background-color: ${props => props.theme.modal.plusBackground};\n  margin-right: 8px;\n  padding: 7px;\n`;\n\nexport const PlusIcon = styled.svg`\n  width: 14px;\n  height: 14px;\n  stroke: ${props => props.theme.modal.plusColor};\n`;\n\nexport const ErrorSection = styled(ErrorMessage)`\n  padding-left: 14px;\n  color: #c04d4d;\n  font-size: 18px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.36px;\n`;\n\nexport const ModalForm = styled(Form)`\n  margin: 0;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { editColumn } from 'redux/dashboards/dashboardsOperations';\nimport sprite from '../../../../images/sprite.svg';\n\nimport {\n  FormWrapper,\n  Section,\n  AuthFormSubmitButton,\n  PlusIcon,\n  TitleInput,\n  SectionTitle,\n  ModalForm,\n  ErrorSection,\n  ButtonPlus,\n} from '../ColumnModal.styled';\n\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().required('Title is required'),\n});\nconst initialValues = {\n  title: '',\n};\n\nconst EditColumnModal = ({ columnId, closeModal }) => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    const { title } = values;\n    dispatch(editColumn({ columnId, title }));\n    resetForm();\n    closeModal();\n  };\n\n  return (\n    <Section>\n      <SectionTitle>Edit column</SectionTitle>\n\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        <ModalForm>\n          <FormWrapper>\n            <ErrorSection name=\"title\" component=\"div\" />\n            <TitleInput\n              type=\"text \"\n              id=\"text\"\n              name=\"title\"\n              placeholder=\"Title \"\n            />\n          </FormWrapper>\n\n          <AuthFormSubmitButton type=\"submit\">\n            <ButtonPlus>\n              <PlusIcon>\n                <use href={sprite + '#icon-plus'} />\n              </PlusIcon>\n            </ButtonPlus>\n            Edit\n          </AuthFormSubmitButton>\n        </ModalForm>\n      </Formik>\n    </Section>\n  );\n};\n\nexport default EditColumnModal;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div``;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n`;\n\nexport const ContentWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 100%;\n`;\n\nexport const TaskList = styled.ul`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  width: 350px;\n  gap: 8px;\n  max-height: calc(154px * 2 + 8px);\n  padding-right: 8px;\n\n  overflow-y: scroll;\n\n  ::-webkit-scrollbar {\n    width: 8px;\n  }\n\n  ::-webkit-scrollbar-track {\n    background-color: ${props => props.theme.column.scrollTrack};\n    border: 1px solid ${props => props.theme.column.scrollBorder};\n    border-radius: 12px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    border-radius: 12px;\n    background-color: ${props => props.theme.column.scrollThumb};\n  }\n\n  @media screen and (min-height: 780px) {\n    max-height: calc(154px * 3 + 16px);\n  }\n\n  @media screen and (min-height: 942px) {\n    max-height: calc(154px * 4 + 24px);\n  }\n\n  @media screen and (min-height: 1104px) {\n    max-height: calc(154px * 5 + 32px);\n  }\n`;\n\n// header\nexport const Header = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  width: 334px;\n  height: 56px;\n  padding: 14px 24px;\n\n  border-radius: 8px;\n  background-color: ${props => props.theme.column.backgroundMain};\n  font-weight: 500;\n`;\n\nexport const Title = styled.h2`\n  color: ${props => props.theme.column.textMain};\n  font-size: 14px;\n  font-family: 'Poppins';\n  font-weight: 500;\n  letter-spacing: -0.28px;\n`;\n\nexport const IconWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n`;\n\nexport const Icon = styled.svg`\n  width: 16px;\n  height: 16px;\n  stroke: ${props => props.theme.column.icon};\n  fill: transparent;\n  cursor: pointer;\n  transition: all 250ms linear;\n\n  &:hover {\n    opacity: 0.4;\n    transform: scale(1.4);\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 334px;\n  padding: 14px;\n  margin-bottom: 16px;\n\n  font-size: 14px;\n  font-family: 'Poppins';\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n\n  border: none;\n  color: ${props => props.theme.column.buttonColor};\n  background-color: ${props => props.theme.column.buttonBackground};\n  border-radius: 8px;\n\n  transition: all 250ms linear;\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.9;\n  }\n`;\n\nexport const ButtonPlus = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n\n  width: 28px;\n  height: 28px;\n  background-color: ${props => props.theme.column.plusBackground};\n  margin-right: 8px;\n  padding: 7px;\n\n  transition: all 250ms linear;\n\n  cursor: pointer;\n\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n\nexport const PlusIcon = styled.svg`\n  width: 14px;\n  height: 14px;\n  stroke: ${props => props.theme.column.plusColor};\n`;\n","import React, { useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { addCard } from 'redux/dashboards/dashboardsOperations';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport {\n  FormWrapper,\n  Section,\n  AuthFormSubmitButton,\n  TitleInput,\n  SectionTitle,\n  Textarea,\n  Label,\n  PlusIcon,\n  DefaultRadioBtn,\n  LabelItem,\n  RadioBtnWrapper,\n  FormTitle,\n  Wrapper,\n  DateTitle,\n  ModalForm,\n  ErrorSection,\n  ButtonPlus,\n} from '../CardModal.styled';\nimport sprite from '../../../../images/sprite.svg';\n\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().required('Title is required!'),\n  description: Yup.string()\n    .max(230, 'Name must be at most 230 characters')\n    .required('Description is required'),\n});\n\nconst options = ['low', 'medium', 'high', 'without'];\n\nconst months = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\nconst today = new Date();\nconst month = months[today.getMonth()];\nconst day = today.getDate();\nconst formattedDate = `${month} ${day}`;\n\nconst AddCardModal = ({ columnId, closeModal }) => {\n  const dispatch = useDispatch();\n  const [selectedLabel, setSelectedLabel] = useState(options[3]);\n  const [startDate, setStartDate] = useState('');\n  const customDate =\n    startDate !== ''\n      ? `${startDate.getDate()}/0${\n          startDate.getMonth() + 1\n        }/${startDate.getFullYear()}`\n      : null;\n\n  const initialValues = {\n    title: '',\n    description: '',\n    priority: selectedLabel,\n  };\n\n  let deadline = startDate;\n\n  const handleSubmit = (values, { resetForm }) => {\n    const { title, description, priority } = values;\n\n    if (deadline === '') {\n      deadline = new Date().toISOString();\n    }\n\n    dispatch(addCard({ columnId, title, description, priority, deadline }));\n    resetForm();\n    closeModal();\n  };\n\n  return (\n    <Section>\n      <SectionTitle>Add Card</SectionTitle>\n\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        <ModalForm>\n          <FormWrapper>\n            <ErrorSection name=\"title\" component=\"div\" />\n            <TitleInput\n              type=\"text\"\n              id=\"title\"\n              name=\"title\"\n              placeholder=\"Title\"\n            />\n\n            <ErrorSection name=\"description\" component=\"div\" />\n            <Textarea\n              component=\"textarea\"\n              name=\"description\"\n              id=\"description\"\n              type=\"text\"\n              placeholder=\"Description\"\n            />\n          </FormWrapper>\n\n          <FormWrapper>\n            <FormTitle>Icons </FormTitle>\n            <RadioBtnWrapper>\n              {options.map((el, idx) => (\n                <Label\n                  key={idx}\n                  value={el}\n                  className={selectedLabel === el ? 'active' : ''}\n                >\n                  <LabelItem\n                    onClick={() => setSelectedLabel(el)}\n                    value={el}\n                    className={selectedLabel === el ? 'active' : ''}\n                  />\n\n                  <DefaultRadioBtn type=\"radio\" value={el} name=\"priority\" />\n                </Label>\n              ))}\n            </RadioBtnWrapper>\n          </FormWrapper>\n\n          <FormWrapper>\n            <FormTitle>Deadline </FormTitle>\n            <DateTitle\n              onClick={() => document.querySelector('.input-ref').click()}\n            >\n              {startDate !== '' ? customDate : `Today, ${formattedDate}`}\n            </DateTitle>\n            <Wrapper>\n              <DatePicker\n                className=\"input-ref\"\n                minDate={new Date()}\n                timeFormat=\"dd/MM/yyyy\"\n                selected={startDate}\n                onChange={date => setStartDate(date)}\n              />\n            </Wrapper>\n          </FormWrapper>\n\n          <AuthFormSubmitButton type=\"submit\">\n            <ButtonPlus>\n              <PlusIcon>\n                <use href={sprite + '#icon-plus'} />\n              </PlusIcon>\n            </ButtonPlus>\n            Create\n          </AuthFormSubmitButton>\n        </ModalForm>\n      </Formik>\n    </Section>\n  );\n};\n\nexport default AddCardModal;\n","import { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport sprite from '../../../images/sprite.svg';\nimport { deleteColumn } from 'redux/dashboards/dashboardsOperations';\nimport Card from 'components/Cards/Card';\nimport BasicModal from 'components/Modals/BasicModal/BasicModal';\nimport EditColumnModal from 'components/Modals/ColumnModal/EditColumnModal/EditColumnModal';\nimport {\n  Wrapper,\n  Header,\n  Button,\n  PlusIcon,\n  ButtonPlus,\n  TaskList,\n  IconWrapper,\n  Icon,\n  Content,\n  Title,\n  ContentWrapper,\n} from './ColumnTask.Styled';\nimport AddCardModal from 'components/Modals/CardModal/AddCardModal/AddCardModal';\n\nexport const ColumnTask = ({ item }) => {\n  const dispatch = useDispatch();\n\n  const [openColumnModal, setOpenColumnModal] = useState(false);\n  const [openCardModal, setOpenCardModal] = useState(false);\n\n  const handleOpenColumnModal = () => setOpenColumnModal(true);\n  const handleCloseColumnModal = () => setOpenColumnModal(false);\n\n  const handleOpenCardModal = () => setOpenCardModal(true);\n  const handleCloseCardModal = () => setOpenCardModal(false);\n\n  return (\n    <Wrapper>\n      <ContentWrapper>\n        <Content>\n          <Header>\n            <Title>{item.title}</Title>\n\n            <IconWrapper>\n              <Icon onClick={handleOpenColumnModal}>\n                <use href={sprite + '#icon-pencil'} />\n              </Icon>\n\n              <Icon onClick={() => dispatch(deleteColumn(item._id))}>\n                <use href={sprite + '#icon-trash'} />\n              </Icon>\n            </IconWrapper>\n          </Header>\n\n          <TaskList>\n            {item.cards &&\n              item.cards.map(item => <Card key={item._id} item={item} />)}\n          </TaskList>\n        </Content>\n\n        <Button onClick={handleOpenCardModal}>\n          <ButtonPlus>\n            <PlusIcon>\n              <use href={sprite + '#icon-plus'} />\n            </PlusIcon>\n          </ButtonPlus>\n          Add another card\n        </Button>\n      </ContentWrapper>\n      <BasicModal\n        open={openColumnModal}\n        closeModal={handleCloseColumnModal}\n        children={\n          <EditColumnModal\n            columnId={item._id}\n            closeModal={handleCloseColumnModal}\n          />\n        }\n      />\n\n      <BasicModal\n        open={openCardModal}\n        closeModal={handleCloseCardModal}\n        children={\n          <AddCardModal columnId={item._id} closeModal={handleCloseCardModal} />\n        }\n      />\n    </Wrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n\n  overflow-x: scroll;\n  width: 100%;\n  height: 100%;\n  margin-bottom: 8px;\n\n  ::-webkit-scrollbar {\n    height: 12px;\n    width: calc(100% - 24px);\n  }\n\n  ::-webkit-scrollbar-track {\n    background-color: ${props => props.theme.column.scrollTrack};\n    border: 1px solid ${props => props.theme.column.scrollBorder};\n    border-radius: 12px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    border-radius: 12px;\n    background-color: ${props => props.theme.column.scrollThumb};\n  }\n\n  @media screen and (min-width: 768px) {\n    overflow-x: ${props => (props.length < 2 ? 'hidden' : 'scroll')};\n  }\n\n  @media screen and (min-width: 1280px) {\n    overflow-x: ${props => (props.length < 3 ? 'hidden' : 'scroll')};\n  }\n`;\n\nexport const ContentWrapper = styled.div`\n  position: relative;\n  display: flex;\n  gap: 34px;\n`;\n","import React from 'react';\n\nimport {\n  FormWrapper,\n  Section,\n  AuthFormSubmitButton,\n  PlusIcon,\n  TitleInput,\n  SectionTitle,\n  ModalForm,\n  ErrorSection,\n  ButtonPlus,\n} from '../ColumnModal.styled';\nimport sprite from '../../../../images/sprite.svg';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { addColumn } from 'redux/dashboards/dashboardsOperations';\nimport { useSelector } from 'react-redux';\nimport { selectColumns } from 'redux/dashboards/dashboardsSelectors';\n\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().required('Title is required'),\n});\nconst initialValues = {\n  title: '',\n};\n\nconst AddColumnModal = ({ dashboardId, closeModal }) => {\n  const dispatch = useDispatch();\n  const columns = useSelector(selectColumns);\n\n  const handleSubmit = (values, { resetForm }) => {\n    const { title } = values;\n\n    const alreadyExists = columns.findIndex(item => {\n      const name = item.title.toLowerCase();\n      const newName = title.toLowerCase();\n      return name === newName;\n    });\n\n    if (alreadyExists >= 0) {\n      return `${columns.name} is already added to contact list`;\n    } else {\n    }\n\n    dispatch(\n      addColumn({\n        dashboardId,\n        title,\n      })\n    );\n    resetForm();\n    closeModal();\n  };\n\n  return (\n    <Section>\n      <SectionTitle>Add column</SectionTitle>\n\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        <ModalForm>\n          <FormWrapper>\n            <ErrorSection name=\"title\" component=\"div\" />\n            <TitleInput\n              type=\"text \"\n              id=\"text\"\n              name=\"title\"\n              placeholder=\"Title \"\n            />\n          </FormWrapper>\n\n          <AuthFormSubmitButton type=\"submit\">\n            <ButtonPlus>\n              <PlusIcon>\n                <use href={sprite + '#icon-plus'} />\n              </PlusIcon>\n            </ButtonPlus>\n            Add\n          </AuthFormSubmitButton>\n        </ModalForm>\n      </Formik>\n    </Section>\n  );\n};\n\nexport default AddColumnModal;\n","import AddButton from 'components/Boards/AddButton/AddButton';\nimport { ColumnTask } from 'components/Boards/ColumnTask/ColumnTask';\nimport { ContentWrapper, Wrapper } from './MainDashboard.styled';\nimport { useState } from 'react';\nimport BasicModal from 'components/Modals/BasicModal/BasicModal';\nimport AddColumnModal from 'components/Modals/ColumnModal/AddColumnModal';\nimport { useSelector } from 'react-redux';\nimport {\n  selectColumns,\n  selectColumnsLength,\n  selectCurrentDashboard,\n} from 'redux/dashboards/dashboardsSelectors';\n\nconst MainDashboard = () => {\n  const columnLength = useSelector(selectColumnsLength);\n  const currentDashboard = useSelector(selectCurrentDashboard);\n\n  const columns = useSelector(selectColumns);\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  return (\n    <Wrapper length={columnLength}>\n      <ContentWrapper>\n        {columns &&\n          columns.map(item => <ColumnTask key={item._id} item={item} />)}\n\n        <AddButton openModal={handleOpen} />\n      </ContentWrapper>\n\n      <BasicModal\n        open={open}\n        closeModal={handleClose}\n        children={\n          <AddColumnModal\n            dashboardId={currentDashboard?._id}\n            closeModal={handleClose}\n          />\n        }\n      />\n    </Wrapper>\n  );\n};\n\nexport default MainDashboard;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Wrapper } from './ScreensPage.styled';\nimport { selectIsMenuOpen } from 'redux/menuMode/menuModeSelectors';\nimport { closeMenuMode } from 'redux/menuMode/menuModeSlice';\n\nimport HeaderDashboard from './HeaderDashboard/HeaderDashboard';\nimport MainDashboard from './MainDashboard/MainDashboard';\n\nconst ScreensPage = () => {\n  const dispatch = useDispatch();\n\n  const menuMode = useSelector(selectIsMenuOpen);\n  const currentBg = useSelector(state => state.dashboards.currentBg);\n  const currentName = useSelector(state => state.dashboards.currentName);\n\n  const handleScreenClick = () => {\n    if (menuMode) {\n      dispatch(closeMenuMode());\n    }\n  };\n\n  return (\n    <Wrapper onClick={handleScreenClick} bgcUrl={currentBg} isOpen={menuMode}>\n      <HeaderDashboard children={currentName} />\n\n      <MainDashboard />\n    </Wrapper>\n  );\n};\n\nexport default ScreensPage;\n","export const selectAllDashboards = state => state.dashboards.dashboards;\n\nexport const selectCurrentDashboard = state =>\n  state.dashboards.currentDashboard.dashboard;\n\nexport const selectColumns = state => state.dashboards.currentDashboard.columns;\n\nexport const selectColumnsLength = state => state.dashboards.columnsLength;\n","export const selectIsMenuOpen = state => state.menuMode.isMenuOpen;\n"],"names":["ModalWindow","styled","Modal","ModalField","Box","props","theme","modal","border","backgroundMain","CloseModal","iconClose","children","name","open","closeModal","useState","modalClass","setModalClass","useEffect","handleBtnClick","style","position","onClose","className","onClick","type","href","sprite","width","height","Wrapper","bgcUrl","isOpen","Text","themePopup","textMain","Icon","icon","Header","Title","header","userName","Button","length","addColumnButton","background","IconWrapper","plusBackground","plusColor","color","openModal","columnsLength","useSelector","selectColumnsLength","CardWrapper","column","expired","priority","TopWrapper","textSecondary","borderColor","BottomWrapper","Stats","Priority","Deadline","IconsGroup","ActiveIcon","IconBellWrapper","IconBell","MoverWrapper","PopupWrapper","boxShadow","PopupItem","textAccent","PopupText","PopupIcon","checkTextLength","text","str","split","join","splice","Section","SectionTitle","FormWrapper","TitleInput","Field","buttonBackground","Textarea","AuthFormSubmitButton","buttonText","DefaultRadioBtn","FormTitle","RadioBtnWrapper","Label","value","LabelItem","ButtonPlus","PlusIcon","ErrorSection","ErrorMessage","ModalForm","Form","unactiveDay","today","DateTitle","validationSchema","Yup","shape","title","required","description","max","options","card","dispatch","useDispatch","_id","deadline","selectedLabel","setSelectedLabel","startDate","setStartDate","customDate","getDate","getMonth","getFullYear","dateLabel","Date","toLocaleString","year","month","day","initialValues","editedDeadline","onSubmit","values","resetForm","editCard","cardId","component","id","placeholder","map","el","idx","document","querySelector","click","minDate","timeFormat","selected","onChange","date","item","isPopupOpen","setIsPopupOpen","moveIconRef","useRef","openCardModal","setOpenCardModal","handleCloseCardModal","parsedDate","formatedDeadline","handleOutsideClick","event","composedPath","includes","current","body","addEventListener","removeEventListener","expiredCard","ref","deleteCard","BasicModal","columnId","editColumn","Content","ContentWrapper","TaskList","scrollTrack","scrollBorder","scrollThumb","buttonColor","formattedDate","toISOString","addCard","ColumnTask","openColumnModal","setOpenColumnModal","handleCloseColumnModal","deleteColumn","cards","dashboardId","columns","selectColumns","findIndex","toLowerCase","addColumn","columnLength","currentDashboard","selectCurrentDashboard","setOpen","handleClose","menuMode","selectIsMenuOpen","currentBg","state","dashboards","currentName","closeMenuMode","selectAllDashboards","dashboard","isMenuOpen"],"sourceRoot":""}