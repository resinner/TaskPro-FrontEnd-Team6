{"version":3,"file":"static/js/935.0b7ae131.chunk.js","mappings":"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","sources":["components/Modals/BasicModal/BasicModal.styled.js","components/Modals/BasicModal/BasicModal.js","components/ScreensPage/ScreensPage.styled.js","components/ScreensPage/Filter/Filter.styled.js","components/ScreensPage/Filter/Filter.js","components/ScreensPage/HeaderDashboard/HeaderDashboard.styled.js","components/ScreensPage/HeaderDashboard/HeaderDashboard.js","components/Boards/AddButton/AddButton.styled.js","components/Boards/AddButton/AddButton.js","components/Boards/ColumnTask/ColumnTask.Styled.js","components/Modals/ColumnModal/ColumnModal.styled.js","components/Modals/ColumnModal/EditColumnModal/EditColumnModal.js","components/Boards/ColumnTask/ColumnTask.js","components/ScreensPage/MainDashboard/MainDashboard.styled.js","components/Modals/ColumnModal/AddColumnModal/AddColumnModal.js","components/ScreensPage/MainDashboard/MainDashboard.js","components/ScreensPage/ScreensPage.js","redux/dashboards/dashboardsSelectors.js","redux/menuMode/menuModeSelectors.js"],"sourcesContent":["import styled from 'styled-components';\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\n\nexport const ModalWindow = styled(Modal)`\n  backdrop-filter: blur(2px);\n`;\n\nexport const ModalField = styled(Box)`\n  padding: 24px;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  border-radius: 8px;\n\n  border: 1px solid ${props => props.theme.modal.border};\n  background: ${props => props.theme.modal.backgroundMain};\n  outline: none;\n\n  width: 335px;\n\n  @media screen and (min-width: 768px) {\n    width: 350px;\n  }\n\n  &.filter {\n    width: 300px;\n  }\n\n  &.needHelp {\n    box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.05);\n\n    @media screen and (min-width: 768px) {\n      width: 400px;\n    }\n  }\n\n  &.editProfile {\n    box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.05);\n\n    @media screen and (min-width: 768px) {\n      width: 400px;\n    }\n  }\n`;\n\nexport const CloseModal = styled.svg`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n  stroke: ${props => props.theme.modal.iconClose};\n  width: 18px;\n  height: 18px;\n  cursor: pointer;\n  transition: all 250ms linear;\n\n  &:hover {\n    opacity: 0.8;\n    scale: 1.2;\n  }\n`;\n","import * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { ModalField, CloseModal, ModalWindow } from './BasicModal.styled';\n\nimport sprite from '../../../images/sprite.svg';\n\nconst BasicModal = ({ children, name, open, closeModal }) => {\n  const [modalClass, setModalClass] = useState(``);\n\n  const handleBtnClick = name => {\n    if (name === 'NeedHelp') {\n      setModalClass('needHelp');\n    } else if (name === 'Filters') {\n      setModalClass('filter');\n    } else if (name === 'EditProfile') {\n      setModalClass('editProfile');\n    } else {\n      setModalClass('');\n    }\n  };\n\n  useEffect(() => {\n    handleBtnClick(name);\n  }, [name]);\n\n  return (\n    <div>\n      <ModalWindow\n        open={open}\n        onClose={closeModal}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <ModalField className={modalClass}>\n          <CloseModal onClick={closeModal} type=\"button\">\n            <use href={sprite + '#icon-x-close'} width={18} height={18} />\n          </CloseModal>\n          {children}\n        </ModalField>\n      </ModalWindow>\n    </div>\n  );\n};\n\nexport default BasicModal;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n  align-items: start;\n\n  height: calc(100vh - 60px);\n\n  background-image: url(${props => props.bgcUrl});\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n\n  padding: 14px 20px 0 20px;\n\n  margin-left: ${props => (props.isOpen ? '225px' : '0')};\n  transition: all 250ms linear;\n\n  @media screen and (min-width: 768px) {\n    height: calc(100vh - 68px);\n    padding: 26px 32px 0 32px;\n\n    margin-left: ${props => (props.isOpen ? '260px' : '0')};\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding: 10px 24px 0 24px;\n    margin-left: 260px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  position: relative;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n  cursor: pointer;\n`;\n\nexport const Text = styled.span`\n  font-family: Poppins;\n  color: ${props => props.theme.themePopup.textMain};\n  font-size: 14px;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n`;\n\nexport const Icon = styled.svg`\n  width: 16px;\n  height: 16px;\n  stroke: ${props => props.theme.themePopup.icon};\n  transition: all 250ms linear;\n  fill: transparent;\n\n  ${props => props.isOpen && 'transform: rotate(-180deg)'};\n`;\n","import { Icon, Text, Wrapper } from './Filter.styled';\nimport sprite from '../../../images/sprite.svg';\n\nconst Filter = () => {\n  return (\n    <Wrapper>\n      <Icon>\n        <use href={sprite + '#icon-filter'} />\n      </Icon>\n\n      <Text>Filters</Text>\n    </Wrapper>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Header = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n  align-items: center;\n\n  margin-bottom: 10px;\n`;\n\nexport const Title = styled.h2`\n  color: ${props => props.theme.header.userName};\n  font-size: 18px;\n  font-family: 'Poppins';\n  font-style: normal;\n  font-weight: 500;\n  letter-spacing: -0.36px;\n`;\n","import Filter from '../Filter/Filter';\nimport { Header, Title } from './HeaderDashboard.styled';\n\nconst HeaderDashboard = ({ children }) => {\n  return (\n    <Header>\n      <Title>{children}</Title>\n\n      <Filter />\n    </Header>\n  );\n};\n\nexport default HeaderDashboard;\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  position: absolute;\n  top: 0;\n\n  right: ${props => (props.length === 0 ? '-334px' : '-368px')};\n  width: 334px;\n  height: 56px;\n  padding: 14px 79px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n\n  border-radius: 8px;\n  background: ${props => props.theme.addColumnButton.background};\n  outline: none;\n  border: none;\n\n  transition: all 250ms linear;\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.9;\n  }\n`;\n\nexport const IconWrapper = styled.div`\n  width: 28px;\n  height: 28px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n  background-color: ${props => props.theme.addColumnButton.plusBackground};\n\n  transition: all 250ms linear;\n\n  cursor: pointer;\n\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n\nexport const Icon = styled.svg`\n  width: 14px;\n  height: 14px;\n  stroke: ${props => props.theme.addColumnButton.plusColor};\n`;\n\nexport const Text = styled.p`\n  color: ${props => props.theme.addColumnButton.color};\n  font-size: 14px;\n  font-family: Poppins;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  width: 150px;\n`;\n","import { Button, Icon, IconWrapper, Text } from './AddButton.styled';\nimport sprite from '../../../images/sprite.svg';\nimport { useSelector } from 'react-redux';\nimport { selectColumnsLength } from 'redux/dashboards/dashboardsSelectors';\n\nconst AddButton = ({ openModal }) => {\n  const columnsLength = useSelector(selectColumnsLength);\n\n  return (\n    <Button length={columnsLength} onClick={openModal} type=\"button\">\n      <IconWrapper>\n        <Icon>\n          <use href={sprite + '#icon-plus'} />\n        </Icon>\n      </IconWrapper>\n\n      <Text>Add another column</Text>\n    </Button>\n  );\n};\n\nexport default AddButton;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: space-between;\n  height: 100%;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n`;\n\nexport const TaskList = styled.ul`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  width: 350px;\n  gap: 8px;\n  height: 400px;\n  padding-right: 8px;\n\n  overflow-y: scroll;\n\n  ::-webkit-scrollbar {\n    width: 8px;\n  }\n\n  ::-webkit-scrollbar-track {\n    background-color: ${props => props.theme.column.scrollTrack};\n    border: 1px solid ${props => props.theme.column.scrollBorder};\n    border-radius: 12px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    border-radius: 12px;\n    background-color: ${props => props.theme.column.scrollThumb};\n  }\n`;\n\n// header\nexport const Header = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  width: 334px;\n  height: 56px;\n  padding: 14px 24px;\n\n  border-radius: 8px;\n  background-color: ${props => props.theme.column.backgroundMain};\n  font-weight: 500;\n`;\n\nexport const Title = styled.h2`\n  color: ${props => props.theme.column.textMain};\n  font-size: 14px;\n  font-family: 'Poppins';\n  font-weight: 500;\n  letter-spacing: -0.28px;\n`;\n\nexport const IconWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n`;\n\nexport const Icon = styled.svg`\n  width: 16px;\n  height: 16px;\n  stroke: ${props => props.theme.column.icon};\n  fill: transparent;\n  cursor: pointer;\n  transition: all 250ms linear;\n\n  &:hover {\n    opacity: 0.4;\n    transform: scale(1.4);\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 334px;\n  padding: 14px;\n  margin-bottom: 16px;\n\n  font-size: 14px;\n  font-family: 'Poppins';\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n\n  border: none;\n  color: ${props => props.theme.column.buttonColor};\n  background-color: ${props => props.theme.column.buttonBackground};\n  border-radius: 8px;\n\n  transition: all 250ms linear;\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.9;\n  }\n`;\n\nexport const ButtonPlus = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n\n  width: 28px;\n  height: 28px;\n  background-color: ${props => props.theme.column.plusBackground};\n  margin-right: 8px;\n  padding: 7px;\n\n  transition: all 250ms linear;\n\n  cursor: pointer;\n\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n\nexport const PlusIcon = styled.svg`\n  width: 14px;\n  height: 14px;\n  stroke: ${props => props.theme.column.plusColor};\n`;\n","import styled from 'styled-components';\n\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const Section = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: start;\n`;\n\nexport const SectionTitle = styled.h2`\n  color: #fff;\n  font-size: 18px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.36px;\n  margin-bottom: 24px;\n`;\n\nexport const FormWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: start;\n\n  margin-bottom: 24px;\n`;\n\nexport const LabelInput = styled.label`\n  width: 100%;\n`;\n\nexport const TitleInput = styled(Field)`\n  width: 100%;\n  height: 49px;\n  padding: 14px 18px;\n  background: #1f1f1f;\n  background-color: rgba(31, 31, 31, 1);\n  opacity: 0.4;\n  border: 1px solid #bedbb0;\n  box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n  border-radius: 8px;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 21px;\n  letter-spacing: -0.02em;\n  color: #ffffff;\n\n  &::placeholder {\n    color: rgba(255, 255, 255, 1);\n    font-size: 14px;\n    font-family: Poppins;\n    letter-spacing: -0.28px;\n  }\n`;\n\nexport const AuthFormSubmitButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  margin-top: 10px;\n  padding: 14px;\n  border: none;\n  background: #bedbb0;\n  border-radius: 8px;\n  cursor: pointer;\n\n  font-family: 'Poppins';\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 21px;\n  text-align: center;\n  letter-spacing: -0.02em;\n  color: #161616;\n`;\nexport const ButtonPlus = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n\n  width: 28px;\n  height: 28px;\n  background-color: ${props => props.theme.modal.plusBackground};\n  margin-right: 8px;\n  padding: 7px;\n`;\n\nexport const PlusIcon = styled.svg`\n  width: 14px;\n  height: 14px;\n  stroke: ${props => props.theme.modal.plusColor};\n`;\n\nexport const ErrorSection = styled(ErrorMessage)`\n  padding-left: 14px;\n  color: #c04d4d;\n  font-size: 18px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.36px;\n`;\nexport const ModalForm = styled(Form)`\n  margin: 0;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n","import React from 'react';\n\nimport {\n  FormWrapper,\n  Section,\n  AuthFormSubmitButton,\n  PlusIcon,\n  TitleInput,\n  SectionTitle,\n  ModalForm,\n  ErrorSection,\n  ButtonPlus,\n} from '../ColumnModal.styled';\nimport sprite from '../../../../images/sprite.svg';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { editColumn } from 'redux/dashboards/dashboardsOperations';\n\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().required('Title is required'),\n});\nconst initialValues = {\n  title: '',\n};\n\nconst EditColumnModal = ({ columnId, closeModal }) => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    const { title } = values;\n    dispatch(editColumn({ columnId, title }));\n    resetForm();\n    closeModal();\n  };\n\n  return (\n    <Section>\n      <SectionTitle>Edit column</SectionTitle>\n\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        <ModalForm>\n          <FormWrapper>\n            <ErrorSection name=\"title\" component=\"div\" />\n            <TitleInput\n              type=\"text \"\n              id=\"text\"\n              name=\"title\"\n              placeholder=\"Title \"\n            />\n          </FormWrapper>\n\n          <AuthFormSubmitButton type=\"submit\">\n            <ButtonPlus>\n              <PlusIcon>\n                <use href={sprite + '#icon-plus'} />\n              </PlusIcon>\n            </ButtonPlus>\n            Edit\n          </AuthFormSubmitButton>\n        </ModalForm>\n      </Formik>\n    </Section>\n  );\n};\n\nexport default EditColumnModal;\n","import { useDispatch } from 'react-redux';\nimport sprite from '../../../images/sprite.svg';\nimport { useState } from 'react';\nimport {\n  Wrapper,\n  Header,\n  Button,\n  PlusIcon,\n  ButtonPlus,\n  TaskList,\n  IconWrapper,\n  Icon,\n  Content,\n  Title,\n} from './ColumnTask.Styled';\nimport { deleteColumn } from 'redux/dashboards/dashboardsOperations';\nimport BasicModal from 'components/Modals/BasicModal/BasicModal';\nimport EditColumnModal from 'components/Modals/ColumnModal/EditColumnModal/EditColumnModal';\n\n// import Card from 'components/Cards/Card';\n\nexport const ColumnTask = ({ item }) => {\n  const dispatch = useDispatch();\n  const [open, setOpen] = useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Wrapper>\n      <Content>\n        <Header>\n          <Title>{item.title}</Title>\n\n          <IconWrapper>\n            <Icon onClick={handleOpen}>\n              <use href={sprite + '#icon-pencil'} />\n            </Icon>\n\n            <Icon onClick={() => dispatch(deleteColumn(item._id))}>\n              <use href={sprite + '#icon-trash'} />\n            </Icon>\n          </IconWrapper>\n        </Header>\n\n        <TaskList>\n          {/* {cardsArray.map(item => (\n            <Card  />\n          ))} */}\n        </TaskList>\n      </Content>\n\n      <Button>\n        <ButtonPlus>\n          <PlusIcon>\n            <use href={sprite + '#icon-plus'} />\n          </PlusIcon>\n        </ButtonPlus>\n        Add another card\n      </Button>\n\n      <BasicModal\n        open={open}\n        closeModal={handleClose}\n        children={\n          <EditColumnModal columnId={item._id} closeModal={handleClose} />\n        }\n      />\n    </Wrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n\n  overflow-x: scroll;\n  width: 100%;\n  height: 100%;\n  margin-bottom: 8px;\n\n  ::-webkit-scrollbar {\n    height: 12px;\n    width: calc(100% - 24px);\n  }\n\n  ::-webkit-scrollbar-track {\n    background-color: ${props => props.theme.column.scrollTrack};\n    border: 1px solid ${props => props.theme.column.scrollBorder};\n    border-radius: 12px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    border-radius: 12px;\n    background-color: ${props => props.theme.column.scrollThumb};\n  }\n\n  @media screen and (min-width: 768px) {\n    overflow-x: ${props => (props.length < 2 ? 'hidden' : 'scroll')};\n  }\n\n  @media screen and (min-width: 1280px) {\n    overflow-x: ${props => (props.length < 3 ? 'hidden' : 'scroll')};\n  }\n`;\n\nexport const ContentWrapper = styled.div`\n  position: relative;\n  display: flex;\n  gap: 34px;\n`;\n","import React from 'react';\n\nimport {\n  FormWrapper,\n  Section,\n  AuthFormSubmitButton,\n  PlusIcon,\n  TitleInput,\n  SectionTitle,\n  ModalForm,\n  ErrorSection,\n  ButtonPlus,\n} from '../ColumnModal.styled';\nimport sprite from '../../../../images/sprite.svg';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { addColumn } from 'redux/dashboards/dashboardsOperations';\nimport { useSelector } from 'react-redux';\nimport { selectColumns } from 'redux/dashboards/dashboardsSelectors';\n\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().required('Title is required'),\n});\nconst initialValues = {\n  title: '',\n};\n\nconst AddColumnModal = ({ dashboardId, closeModal }) => {\n  const dispatch = useDispatch();\n  const columns = useSelector(selectColumns);\n\n  const handleSubmit = (values, { resetForm }) => {\n    const { title } = values;\n\n    const alreadyExists = columns.findIndex(item => {\n      const name = item.title.toLowerCase();\n      const newName = title.toLowerCase();\n      return name === newName;\n    });\n\n    if (alreadyExists >= 0) {\n      return `${columns.name} is already added to contact list`;\n    } else {\n      dispatch(addColumn({ dashboardId, title }));\n    }\n    resetForm();\n    closeModal();\n  };\n\n  return (\n    <Section>\n      <SectionTitle>Add column</SectionTitle>\n\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        <ModalForm>\n          <FormWrapper>\n            <ErrorSection name=\"title\" component=\"div\" />\n            <TitleInput\n              type=\"text \"\n              id=\"text\"\n              name=\"title\"\n              placeholder=\"Title \"\n            />\n          </FormWrapper>\n\n          <AuthFormSubmitButton type=\"submit\">\n            <ButtonPlus>\n              <PlusIcon>\n                <use href={sprite + '#icon-plus'} />\n              </PlusIcon>\n            </ButtonPlus>\n            Add\n          </AuthFormSubmitButton>\n        </ModalForm>\n      </Formik>\n    </Section>\n  );\n};\n\nexport default AddColumnModal;\n","import AddButton from 'components/Boards/AddButton/AddButton';\nimport { ColumnTask } from 'components/Boards/ColumnTask/ColumnTask';\nimport { ContentWrapper, Wrapper } from './MainDashboard.styled';\nimport { useState } from 'react';\nimport BasicModal from 'components/Modals/BasicModal/BasicModal';\nimport AddColumnModal from 'components/Modals/ColumnModal/AddColumnModal';\nimport { useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport {\n  selectColumns,\n  selectColumnsLength,\n} from 'redux/dashboards/dashboardsSelectors';\n\nconst MainDashboard = () => {\n  const columnLength = useSelector(selectColumnsLength);\n\n  const { boardName } = useParams();\n  const columns = useSelector(selectColumns);\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  return (\n    <Wrapper length={columnLength}>\n      <ContentWrapper>\n        {columns &&\n          columns.map(item => <ColumnTask key={item._id} item={item} />)}\n        <AddButton openModal={handleOpen} />\n      </ContentWrapper>\n\n      <BasicModal\n        open={open}\n        closeModal={handleClose}\n        children={\n          <AddColumnModal dashboardId={boardName} closeModal={handleClose} />\n        }\n      />\n    </Wrapper>\n  );\n};\n\nexport default MainDashboard;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Wrapper } from './ScreensPage.styled';\nimport { selectIsMenuOpen } from 'redux/menuMode/menuModeSelectors';\nimport { useEffect } from 'react';\nimport { closeMenuMode } from 'redux/menuMode/menuModeSlice';\nimport { useParams } from 'react-router-dom';\nimport { getDashboardById } from 'redux/dashboards/dashboardsOperations';\n\nimport HeaderDashboard from './HeaderDashboard/HeaderDashboard';\nimport MainDashboard from './MainDashboard/MainDashboard';\n\nconst ScreensPage = () => {\n  const dispatch = useDispatch();\n\n  const { boardName } = useParams();\n\n  const menuMode = useSelector(selectIsMenuOpen);\n  const currentDashboard = useSelector(\n    state => state.dashboards.currentDashboard.dashboard\n  );\n\n  useEffect(() => {\n    dispatch(getDashboardById(boardName));\n  }, [boardName, dispatch]);\n\n  const handleScreenClick = () => {\n    if (menuMode) {\n      dispatch(closeMenuMode());\n    }\n  };\n\n  return (\n    <Wrapper\n      onClick={handleScreenClick}\n      bgcUrl={currentDashboard?.backgroundURL}\n      isOpen={menuMode}\n    >\n      <HeaderDashboard children={currentDashboard?.name} />\n\n      <MainDashboard />\n    </Wrapper>\n  );\n};\n\nexport default ScreensPage;\n","export const selectAllDashboards = state => state.dashboards.dashboards;\n\nexport const selectCurrentDashboard = state =>\n  state.dashboards.currentDashboard.dashboard;\n\nexport const selectColumns = state => state.dashboards.currentDashboard.columns;\n\nexport const selectColumnsLength = state => state.dashboards.columnsLength;\n","export const selectIsMenuOpen = state => state.menuMode.isMenuOpen;\n"],"names":["ModalWindow","styled","Modal","ModalField","Box","props","theme","modal","border","backgroundMain","CloseModal","iconClose","children","name","open","closeModal","useState","modalClass","setModalClass","useEffect","handleBtnClick","onClose","className","onClick","type","href","sprite","width","height","Wrapper","bgcUrl","isOpen","Text","themePopup","textMain","Icon","icon","Header","Title","header","userName","Button","length","addColumnButton","background","IconWrapper","plusBackground","plusColor","color","openModal","columnsLength","useSelector","selectColumnsLength","Content","TaskList","column","scrollTrack","scrollBorder","scrollThumb","buttonColor","buttonBackground","ButtonPlus","PlusIcon","Section","SectionTitle","FormWrapper","TitleInput","Field","AuthFormSubmitButton","ErrorSection","ErrorMessage","ModalForm","Form","validationSchema","Yup","shape","title","required","initialValues","columnId","dispatch","useDispatch","onSubmit","values","resetForm","editColumn","component","id","placeholder","ColumnTask","item","setOpen","handleClose","deleteColumn","_id","BasicModal","ContentWrapper","dashboardId","columns","selectColumns","findIndex","toLowerCase","addColumn","columnLength","boardName","useParams","map","menuMode","selectIsMenuOpen","currentDashboard","state","dashboards","dashboard","getDashboardById","closeMenuMode","backgroundURL","selectAllDashboards","isMenuOpen"],"sourceRoot":""}